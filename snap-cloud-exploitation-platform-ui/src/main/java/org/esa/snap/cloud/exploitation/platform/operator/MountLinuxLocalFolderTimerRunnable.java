package org.esa.snap.cloud.exploitation.platform.operator;

import org.esa.snap.cloud.exploitation.platform.CloudExploitationPlatformOp;
import org.esa.snap.cloud.exploitation.platform.UnixMountLocalFolderResult;
import org.esa.snap.ui.loading.ILoadingIndicator;
import org.esa.snap.ui.loading.IMessageDialog;
import org.esa.snap.cloud.exploitation.platform.topology.IMountLocalSharedFolderCallback;

public class MountLinuxLocalFolderTimerRunnable extends MountMacLocalFolderTimerRunnable {

    private final String localPassword;

    public MountLinuxLocalFolderTimerRunnable(IMessageDialog parentWindow, ILoadingIndicator loadingIndicator, int threadId,
                                              String remoteSharedFolderURL, String remoteUsername, String remotePassword,
                                              String localSharedFolderPath, String localPassword, IMountLocalSharedFolderCallback callback) {

        super(parentWindow, loadingIndicator, threadId, remoteSharedFolderURL, remoteUsername, remotePassword, localSharedFolderPath, callback);

        this.localPassword = localPassword;
    }

    @Override
    protected void onSuccessfullyFinish(UnixMountLocalFolderResult result) {
        if (result.isSharedFolderMounted()) {
            this.callback.onSuccessfullyFinishMountingLocalFolder(new LinuxLocalMachineMountFolder(this.localSharedFolderPath, this.localPassword, result));
        } else {
            showErrorDialog();
        }
    }

    @Override
    protected UnixMountLocalFolderResult execute() throws Exception {
        return CloudExploitationPlatformOp.mountLinuxLocalFolder(this.remoteSharedFolderURL, this.remoteUsername, this.remotePassword,
                                                                 this.localSharedFolderPath, this.localPassword);
    }
}
