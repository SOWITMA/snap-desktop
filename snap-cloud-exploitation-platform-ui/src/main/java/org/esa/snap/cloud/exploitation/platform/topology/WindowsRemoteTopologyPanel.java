package org.esa.snap.cloud.exploitation.platform.topology;

import org.apache.commons.lang.StringUtils;
import org.esa.snap.ui.loading.ILoadingIndicator;
import org.esa.snap.ui.loading.IMessageDialog;
import org.esa.snap.cloud.exploitation.platform.operator.MountWindowsLocalDriveTimerRunnable;
import org.esa.snap.cloud.exploitation.platform.operator.WindowsLocalMachineMountDrive;

import java.awt.Insets;
import java.awt.Window;

public class WindowsRemoteTopologyPanel extends RemoteTopologyPanel {

    public WindowsRemoteTopologyPanel(Window parentWindow, Insets defaultTextFieldMargins, Insets defaultListItemMargins) {
        super(parentWindow, defaultTextFieldMargins, defaultListItemMargins);
    }

    @Override
    public String normalizePath(String path) {
        return path.replace('/', '\\');
    }

    @Override
    public void mountLocalSharedFolderAsync(IMessageDialog parentWindow, ILoadingIndicator loadingIndicator, int threadId, IMountLocalSharedFolderCallback callback) {
        String remoteSharedFolderURL = getRemoteSharedFolderURLTextField().getText();
        String remoteUsername = getRemoteUsernameTextField().getText();
        String remotePassword = new String(getRemotePasswordTextField().getPassword());
        String localSharedDrive = getLocalSharedFolderPathTextField().getText();
        if (StringUtils.isBlank(localSharedDrive)) {
            callback.onSuccessfullyFinishMountingLocalFolder(new WindowsLocalMachineMountDrive(null, false));
        } else {
            MountWindowsLocalDriveTimerRunnable runnable = new MountWindowsLocalDriveTimerRunnable(parentWindow, loadingIndicator, threadId, remoteSharedFolderURL,
                                                                                            remoteUsername, remotePassword, localSharedDrive, callback);
            runnable.executeAsync();
        }
    }

    public void addComponents(int gapBetweenColumns, int gapBetweenRows, boolean addToolbarButtons, boolean addSharedFolderBrowseButton) {
        addSharedFolderURLRow(0, gapBetweenColumns,0, addSharedFolderBrowseButton);
        addUsernameRow(1, gapBetweenColumns, gapBetweenRows);
        addPasswordRow(2, gapBetweenColumns, gapBetweenRows);
        addLocalSharedFolderRow(3, gapBetweenColumns, gapBetweenRows, addSharedFolderBrowseButton, "Local shared drive");
        addRemoteMachinesRow(4, gapBetweenColumns, gapBetweenRows, addToolbarButtons);
    }
}
