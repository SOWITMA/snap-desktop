package org.esa.snap.cloud.exploitation.platform.topology;

import org.esa.snap.ui.loading.AbstractTimerRunnable;
import org.esa.snap.ui.loading.ILoadingIndicator;
import org.esa.snap.ui.loading.IMessageDialog;

import java.nio.file.Files;
import java.nio.file.Path;

/**
 * Created by jcoravu on 19/12/2018.
 */
public class WriteRemoteTopologyTimerRunnable extends AbstractTimerRunnable<Void> {

    private final IMessageDialog parentWindow;
    private final RemoteTopology remoteTopology;
    private final Path remoteTopologyFilePath;

    public WriteRemoteTopologyTimerRunnable(IMessageDialog parentWindow, ILoadingIndicator loadingIndicator, int threadId,
                                            RemoteTopology remoteTopology, Path remoteTopologyFilePath) {

        super(loadingIndicator, threadId, 500);

        this.parentWindow = parentWindow;
        this.remoteTopology = remoteTopology;
        this.remoteTopologyFilePath = remoteTopologyFilePath;
    }

    @Override
    protected final void onTimerWakeUp(String messageToDisplay) {
        super.onTimerWakeUp("Saving...");
    }

    @Override
    protected final Void execute() throws Exception {
        Path parentFolder = this.remoteTopologyFilePath.getParent();
        if (!Files.exists(parentFolder)) {
            Files.createDirectories(parentFolder);
        }
        RemoteTopologyUtils.writeTopology(this.remoteTopologyFilePath, this.remoteTopology);
        return null; // nothing to return
    }

    @Override
    protected void onSuccessfullyFinish(Void result) {
        this.parentWindow.close(); // close the dialog
    }

    @Override
    protected String getExceptionLoggingMessage() {
        return "Failed to write the remote topology into the file.";
    }

    @Override
    protected void onFailed(Exception exception) {
        this.parentWindow.showErrorDialog("Failed to write the remote topology into the file.", "Failed");
    }
}
